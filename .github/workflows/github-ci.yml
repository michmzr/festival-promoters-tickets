name: Application CI
on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the any branch
  push:
    branches:
      - develop
      - master
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
jobs:
  Deployment:
    name: start
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 12.16.1
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12.16.1
      - uses: actions/setup-java@v1
        with:
          java-version: '13.x'
      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install node.js packages
        run: npm install
      - name: Run backend test
        continue-on-error: true
        run: |
          chmod +x mvnw
          ./mvnw -ntp clean verify -P-webpack
      #      - name: Run frontend test
      #        continue-on-error: true
      #        run: npm run test
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "./target/test-results/**/*.xml"
      - name: Package application
        run: ./mvnw -ntp package -Pprod-heroku,tls -DskipTests
      - name: Deploy to Heroku
        # You may pin to the exact commit or the version.
        # uses: AkhileshNS/heroku-deploy@79ef2ae4ff9b897010907016b268fd0f88561820
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          # This will be used for authentication. You can find it in your heroku homepage account settings
          heroku_api_key: ${{ secrets.HEROKU_APP_KEY}}
          # Email that you use with heroku
          heroku_email: ${{ secrets.HEROKU_EMAIL}}
          # The appname to use for deploying/updatin
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME}}
          healthcheck: "https://organic-promo-tickets.herokuapp.com/management/health"
          delay: 30
          justlogin: true
      - run: heroku plugins:install heroku-cli-deploy
      - run: heroku deploy:jar ./target/organic-promo-tickets.jar -a ${{ secrets.HEROKU_APP_NAME}}


